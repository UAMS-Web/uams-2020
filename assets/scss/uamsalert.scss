// Enable SASS Built-In Modules
@use 'sass:math'; // The sass:math module provides functions that operate on numbers.
// @use 'sass:string'; // The sass:string module makes it easy to combine, search, or split apart strings.
// @use 'sass:color'; // The sass:color module generates new colors based on existing ones, making it easy to build color themes.
// @use 'sass:list'; // The sass:list module lets you access and modify values in lists.
// @use 'sass:map'; // The sass:map module makes it possible to look up the value associated with a key in a map, and much more.
// @use 'sass:selector'; // The sass:selector module provides access to Sass’s powerful selector engine.
// @use 'sass:meta'; // The sass:meta module exposes the details of Sass’s inner workings.

// Bootstrap Core Variable Override
@import "supporting/variables-bootstrap-core-override";

// Bootstrap Genesis Theme Variables
@import "supporting/variables-bootstrap-genesis";

// UAMS Bootstrap Variables Override
@import "uams-supporting/variables";

// UAMS Bootstrap Mixins Override
@import "uams-supporting/mixins";

// Bootstrap Core
@import "../../node_modules/bootstrap/scss/functions";
@import "../../node_modules/bootstrap/scss/variables";
@import "../../node_modules/bootstrap/scss/mixins";

// UAMS Alert CSS

#uamsalert-alert-message.cta-bar.cta-bar-sm {
    padding: ($uams-module-padding-mobile-px / 2) $uams-module-padding-mobile-px;
    font-family: $font-family-base;
    font-size: $font-size-base-px;
    font-weight: $font-weight-base;
    line-height: $line-height-base;
    color: $body-color;
    background-image: none;

    @include media-breakpoint-up(sm) {
        padding: ($uams-module-padding-px / 2) $uams-module-padding-px;
    }
    
    &.uamsalert-red,
    &.urgent-inside,
    &.uamsalert-urgent {
        background-color: $danger;
        color: $white;

        .text-container a {
            color: $white;
        }
    }

    &.uamsalert-orange,
    &.alert-inside,
    &.uamsalert-alert {
        background-color: $warning;
        color: $white;

        .text-container a {
            color: $white;
        }
    }

    &.uamsalert-steel,
    &.fyi-inside,
    &.uamsalert-fyi  {
        background-color: $info;
        color: $white;

        .text-container a {
            color: $white;
        }
    }

    .col-12 {
        @include make-col-ready();
        display: flex;
        flex-grow: 0;
        flex-shrink: 1;
        flex-basis: auto;
        justify-content: center;
    }

    &.cta-bar-centered {
        .inner-container {
            text-align: center;

            h1,
            h2,
            .text-container,
            .btn-container {
                max-width: 100%;
                margin-right: auto;
                margin-left: auto;
            }

            h1,
            h2 {
                width: $line-length-min + em;
            }

            .text-container,
            .btn-container {
                width: $line-length-ideal + em;
            }
            .text-container {
                margin-bottom: 1em;
            }
            .btn-container {
                justify-content: center;
            }
        }
    }

    &.cta-bar-weighted {
        .inner-container {
            @include media-breakpoint-down(sm) {
                text-align: center;
            }
            .cta-heading {
                h1,
                h2 {
                    @include media-breakpoint-up(md) {
                        max-width: $line-length-min + em;
                        max-width: 21.9101em;
                    }
                }
            }
            .cta-body {
                display: flex;
                flex-flow: column;
                justify-content: center;
                align-items: center;

                @include media-breakpoint-up(md) {
                    flex-flow: row nowrap;
                    align-items: flex-start;
                    justify-content: space-between;
                }

                .text-container {
                    max-width: $line-length-ideal + em;

                    @include media-breakpoint-down(sm) {
                        margin-bottom: 1em;
                    }
                }
                .btn-container {
                    justify-content: center;

                    @include media-breakpoint-up(md) {
                        padding-left: $uams-module-padding-mobile-px;
                    }
                }
            }
        }
    }

    &.no-link {
        &.cta-bar-centered,
        &.cta-bar-weighted {
            .inner-container {
                .text-container {
                    width: $line-length-max + em;
                }
            }
        }
    }

    .container-fluid {
        @include make-container();
        padding: 0;
        font-size: 1em;
        line-height: inherit;

        .row {
            @include make-row();
            font-size: 1em;
            line-height: inherit;

            .col-12 {
                font-size: 1em;
                line-height: inherit;

                .inner-container {
                    font-size: 1em;
                    line-height: inherit;

                    .cta-heading {
                        font-size: 1em;
                        line-height: inherit;

                        h1, h2 {
                            margin-top: $headings-margin-top;
                            margin-bottom: $headings-margin-bottom-px;
                            font-family: $headings-font-family;
                            font-weight: $headings-font-weight;
                            line-height: $headings-line-height;
                            font-size: $h4-font-size-px;

                            &:first-child {
                                margin-top: 0;
                            }
                        }
                    }

                    .cta-body {
                        font-size: 1em;
                        line-height: inherit;

                        .text-container {
                            font-size: 1em;
                            line-height: inherit;

                            &:last-child {
                                margin-bottom: 0;
                            }

                            p {
                                font-size: 1em;
                                line-height: inherit;

                                a {
                                    text-decoration: underline;
                            
                                    @include hover-focus {
                                        text-decoration: none;
                                    }
                                }
                            }
                        }
                        
                        .btn-container {
                            font-size: 1em;
                            line-height: inherit;

                            .btn {
                                display: inline-block;
                                font-family: $btn-font-family;
                                font-weight: $btn-font-weight;
                                color: $body-color;
                                text-align: center;
                                vertical-align: middle;
                                user-select: none;
                                background-color: transparent;
                                border: $btn-border-width solid transparent;
                                @include button-size($btn-padding-y-px, $btn-padding-x-px, $btn-font-size-px, $btn-line-height, $btn-border-radius-px);
                                @include transition($btn-transition);
                              
                                @include hover {
                                  color: $body-color;
                                  text-decoration: none;
                                }
                              
                                &:focus,
                                &.focus {
                                  outline: 0;
                                  box-shadow: $btn-focus-box-shadow;
                                }
                              
                                // Disabled comes first so active can properly restyle
                                &.disabled,
                                &:disabled {
                                  opacity: $btn-disabled-opacity;
                                  @include box-shadow(none);
                                }
                              
                                &:not(:disabled):not(.disabled):active,
                                &:not(:disabled):not(.disabled).active {
                                  @include box-shadow($btn-active-box-shadow);
                              
                                  &:focus {
                                    @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
                                  }
                                }

                                &.btn-white {
                                    @include button-variant($white, $white);
                                }

                                &.btn-outline-white {
                                    @include button-outline-variant($white);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}